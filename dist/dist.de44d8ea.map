{"version":3,"sources":["../src/constants.js","../src/utils.js","../src/dwnld.js"],"names":["DEFAULT_MIME_TYPE","DEFAULT_FILE_NAME","BASE64_REGEX","EXTENSION_REGEX","PARSE_PATH_FOR_FILENAME_REGEX","isURL","str","pattern","RegExp","test","printError","e","console","error","message","stack","warn","Error","toString","dataURLToBlob","dataURL","parts","split","type","decoder","atob","decodeURIComponent","binaryData","pop","length","uint8Arr","Uint8Array","i","charCodeAt","Blob","setFileExtension","fileName","extension","exec","stopPropagationHandler","stopPropagation","dwnld","data","mimeType","downloadFromURL","convertBase64ToBlob","saveAsBlob","url","fileNameFromPath","extensionWithQueryParams","ajax","XMLHttpRequest","open","responseType","onload","response","target","download","send","base64Path","blob","navigator","msSaveBlob","URL","_save","createObjectURL","windowMode","_saveWithReader","reader","FileReader","result","readAsDataURL","anchor","document","createElement","href","setAttribute","className","style","display","addEventListener","body","appendChild","Promise","resolve","then","click","removeEventListener","removeChild","revokeObjectURL","catch"],"mappings":"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","file":"dist.de44d8ea.map","sourceRoot":"..","sourcesContent":["const DEFAULT_MIME_TYPE = 'application/octet-stream'\r\nconst DEFAULT_FILE_NAME = 'file'\r\nconst BASE64_REGEX = /^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/\r\nconst EXTENSION_REGEX = /(?:\\.([^.]+))?$/\r\nconst PARSE_PATH_FOR_FILENAME_REGEX = /^.*\\/(.*)\\.(.*)$/g\r\n\r\nexport {\r\n  DEFAULT_FILE_NAME,\r\n  DEFAULT_MIME_TYPE,\r\n  BASE64_REGEX,\r\n  EXTENSION_REGEX,\r\n  PARSE_PATH_FOR_FILENAME_REGEX\r\n}\r\n","import { EXTENSION_REGEX } from './constants'\r\n\r\n/**\r\n * https://stackoverflow.com/a/14582229/7446674\r\n *\r\n * @param {String} str\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction isURL(str) {\r\n  const pattern = new RegExp(\r\n    '^(https?:\\\\/\\\\/)?' + // protocol\r\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|' + // domain name\r\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n      '(\\\\#[-a-z\\\\d_]*)?$',\r\n    'i'\r\n  ) // fragment locator\r\n\r\n  return pattern.test(str)\r\n}\r\n\r\n/**\r\n *\r\n * @param {Error} e\r\n */\r\nfunction printError(e) {\r\n  console.error(\r\n    'Something went wrong while downloading:',\r\n    '\\n',\r\n    e.message,\r\n    '\\n',\r\n    e.stack,\r\n    '\\n'\r\n  )\r\n\r\n  console.warn('Please, report issues to: https://github.com/meyve/dwnld')\r\n  console.warn('Have a nice day :)')\r\n\r\n  throw new Error(e.toString())\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} dataURL\r\n *\r\n * @return {Blob}\r\n */\r\nfunction dataURLToBlob(dataURL) {\r\n  const parts = dataURL.split(/[:;,]/)\r\n  const type = parts[1]\r\n  const decoder = parts[2] === 'base64' ? atob : decodeURIComponent\r\n  const binaryData = decoder(parts.pop())\r\n  const length = binaryData.length\r\n  const uint8Arr = new Uint8Array(length)\r\n\r\n  for (let i = 0; i < length; ++i) {\r\n    uint8Arr[i] = binaryData.charCodeAt(i)\r\n  }\r\n\r\n  return new Blob([uint8Arr], { type: type })\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} fileName\r\n * @param {String} extension\r\n *\r\n * @return {String}\r\n */\r\nfunction setFileExtension(fileName, extension) {\r\n  // If filename has extension in it\r\n  if (EXTENSION_REGEX.exec(fileName)[0]) {\r\n    return fileName\r\n  }\r\n\r\n  return `${fileName}.${extension}`\r\n}\r\n\r\nexport { isURL, printError, dataURLToBlob, setFileExtension }\r\n","import { DEFAULT_MIME_TYPE, DEFAULT_FILE_NAME, BASE64_REGEX, PARSE_PATH_FOR_FILENAME_REGEX } from './constants'\r\nimport { printError, isURL, dataURLToBlob, setFileExtension } from './utils'\r\n\r\nfunction stopPropagationHandler(e) {\r\n  e.stopPropagation()\r\n}\r\n\r\n/**\r\n *\r\n * @param {String|Blob} data\r\n * @param {String} [fileName]\r\n * @param {String} [mimeType]\r\n *\r\n */\r\nfunction dwnld(data, { fileName = DEFAULT_FILE_NAME, mimeType = DEFAULT_MIME_TYPE } = {}) {\r\n  try {\r\n    // If URL was passed - first download it.\r\n    // Then recursively call download again with response.\r\n    if (isURL(data)) {\r\n      return downloadFromURL(data, { fileName, mimeType })\r\n    }\r\n\r\n    // If raw base64:dataURL was passed.\r\n    if (BASE64_REGEX.test(data)) {\r\n      return convertBase64ToBlob(data, { fileName })\r\n    }\r\n\r\n    return saveAsBlob(data, { fileName, mimeType })\r\n  } catch (e) {\r\n    printError(e)\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} url\r\n * @param {String} [fileName]\r\n * @param {String} [mimeType]\r\n */\r\nfunction downloadFromURL(url, { fileName, mimeType = DEFAULT_MIME_TYPE } = {}) {\r\n  const [, fileNameFromPath, extensionWithQueryParams] = PARSE_PATH_FOR_FILENAME_REGEX.exec(url)\r\n\r\n  const extension = extensionWithQueryParams.split('?')[0]\r\n\r\n  fileName = fileName || fileNameFromPath\r\n  fileName = setFileExtension(fileName, extension)\r\n\r\n  const ajax = new XMLHttpRequest()\r\n\r\n  ajax.open('GET', url, true)\r\n  ajax.responseType = 'blob'\r\n  ajax.onload = function(e) {\r\n    const { response } = e.target\r\n\r\n    return download(response, { fileName, mimeType })\r\n  }\r\n\r\n  return ajax.send()\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} base64Path\r\n * @param {String} [fileName]\r\n *\r\n * @return {*}\r\n */\r\nfunction convertBase64ToBlob(base64Path, { fileName = DEFAULT_FILE_NAME } = {}) {\r\n  const blob = dataURLToBlob(base64Path)\r\n  const mimeType = blob.type || DEFAULT_MIME_TYPE\r\n\r\n  return saveAsBlob(blob, { fileName, mimeType })\r\n}\r\n\r\n/**\r\n *\r\n * @param {Blob|String} blob\r\n * @param {String} [fileName]\r\n * @param {String} [mimeType]\r\n */\r\nfunction saveAsBlob(blob, { fileName = DEFAULT_FILE_NAME, mimeType = DEFAULT_MIME_TYPE } = {}) {\r\n  blob = blob instanceof Blob ? blob : new Blob([blob], { type: mimeType })\r\n\r\n  // IE10+ : (has Blob, but not a[download] or URL)\r\n  if (navigator.msSaveBlob) {\r\n    return navigator.msSaveBlob(blob, fileName)\r\n  }\r\n\r\n  // If browser has Blob and URL.\r\n  if (URL) {\r\n    return _save(URL.createObjectURL(blob), { fileName, windowMode: true })\r\n  }\r\n\r\n  // Rest old browsers should try to use reader.\r\n  return _saveWithReader(blob, { fileName })\r\n}\r\n\r\n/**\r\n *\r\n * @param {Blob} blob\r\n * @param {String} [fileName]\r\n */\r\nfunction _saveWithReader(blob, { fileName = DEFAULT_FILE_NAME } = {}) {\r\n  const reader = new FileReader()\r\n  reader.onload = function(e) {\r\n    _save(e.target.result, { fileName })\r\n  }\r\n\r\n  return reader.readAsDataURL(blob)\r\n}\r\n\r\n/**\r\n * @private\r\n *\r\n * @param {String} url\r\n * @param {String} fileName\r\n * @param {Boolean} windowMode\r\n *\r\n */\r\nfunction _save(url, { fileName = DEFAULT_FILE_NAME, windowMode = false } = {}) {\r\n  const anchor = document.createElement('a')\r\n\r\n  anchor.href = url\r\n  anchor.setAttribute('download', fileName)\r\n  anchor.className = 'download_url'\r\n  anchor.style.display = 'none'\r\n  anchor.addEventListener('click', stopPropagationHandler) //fix for IE\r\n  document.body.appendChild(anchor)\r\n\r\n  return Promise.resolve()\r\n    .then(() => anchor.click())\r\n    .then(() => {\r\n      anchor.removeEventListener('click', stopPropagationHandler)\r\n      document.body.removeChild(anchor)\r\n    })\r\n    .then(() => windowMode && URL && URL.revokeObjectURL(anchor.href))\r\n    .catch(printError)\r\n}\r\n\r\nexport default dwnld\r\n"]}