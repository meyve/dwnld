{"version":3,"file":"index.js","sources":["../src/constants.js","../src/utils.js","../src/dwnld.js"],"sourcesContent":["const DEFAULT_MIME_TYPE = 'application/octet-stream'\r\nconst DEFAULT_FILE_NAME = 'file'\r\nconst BASE64_REGEX = /^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/\r\nconst EXTENSION_REGEX = /(?:\\.([^.]+))?$/\r\nconst PARSE_PATH_FOR_FILENAME_REGEX = /^.*\\/(.*)\\.(.*)$/g\r\n\r\nexport {\r\n  DEFAULT_FILE_NAME,\r\n  DEFAULT_MIME_TYPE,\r\n  BASE64_REGEX,\r\n  EXTENSION_REGEX,\r\n  PARSE_PATH_FOR_FILENAME_REGEX\r\n}\r\n","import { EXTENSION_REGEX } from './constants'\r\n\r\n/**\r\n * https://stackoverflow.com/a/14582229/7446674\r\n *\r\n * @param {String} str\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction isURL(str) {\r\n  const pattern = new RegExp(\r\n    '^(https?:\\\\/\\\\/)?' + // protocol\r\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|' + // domain name\r\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n      '(\\\\#[-a-z\\\\d_]*)?$',\r\n    'i'\r\n  ) // fragment locator\r\n\r\n  return pattern.test(str)\r\n}\r\n\r\n/**\r\n *\r\n * @param {Error} e\r\n */\r\nfunction printError(e) {\r\n  console.error(\r\n    'Something went wrong while downloading:',\r\n    '\\n',\r\n    e.message,\r\n    '\\n',\r\n    e.stack,\r\n    '\\n'\r\n  )\r\n\r\n  console.warn('Please, report issues to: https://github.com/meyve/dwnld')\r\n  console.warn('Have a nice day :)')\r\n\r\n  throw new Error(e.toString())\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} dataURL\r\n *\r\n * @return {Blob}\r\n */\r\nfunction dataURLToBlob(dataURL) {\r\n  const parts = dataURL.split(/[:;,]/)\r\n  const type = parts[1]\r\n  const decoder = parts[2] === 'base64' ? atob : decodeURIComponent\r\n  const binaryData = decoder(parts.pop())\r\n  const length = binaryData.length\r\n  const uint8Arr = new Uint8Array(length)\r\n\r\n  for (let i = 0; i < length; ++i) {\r\n    uint8Arr[i] = binaryData.charCodeAt(i)\r\n  }\r\n\r\n  return new Blob([uint8Arr], { type: type })\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} fileName\r\n * @param {String} extension\r\n *\r\n * @return {String}\r\n */\r\nfunction setFileExtension(fileName, extension) {\r\n  // If filename has extension in it\r\n  if (EXTENSION_REGEX.exec(fileName)[0]) {\r\n    return fileName\r\n  }\r\n\r\n  return `${fileName}.${extension}`\r\n}\r\n\r\nexport { isURL, printError, dataURLToBlob, setFileExtension }\r\n","import { DEFAULT_MIME_TYPE, DEFAULT_FILE_NAME, BASE64_REGEX, PARSE_PATH_FOR_FILENAME_REGEX } from './constants'\r\nimport { printError, isURL, dataURLToBlob, setFileExtension } from './utils'\r\n\r\nfunction stopPropagationHandler(e) {\r\n  e.stopPropagation()\r\n}\r\n\r\n/**\r\n *\r\n * @param {String|Blob} data\r\n * @param {String} [fileName]\r\n * @param {String} [mimeType]\r\n *\r\n */\r\nfunction dwnld(data, { fileName = DEFAULT_FILE_NAME, mimeType = DEFAULT_MIME_TYPE } = {}) {\r\n  try {\r\n    // If URL was passed - first download it.\r\n    // Then recursively call download again with response.\r\n    if (isURL(data)) {\r\n      return downloadFromURL(data, { fileName, mimeType })\r\n    }\r\n\r\n    // If raw base64:dataURL was passed.\r\n    if (BASE64_REGEX.test(data)) {\r\n      return convertBase64ToBlob(data, { fileName })\r\n    }\r\n\r\n    return saveAsBlob(data, { fileName, mimeType })\r\n  } catch (e) {\r\n    printError(e)\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} url\r\n * @param {String} [fileName]\r\n * @param {String} [mimeType]\r\n */\r\nfunction downloadFromURL(url, { fileName, mimeType = DEFAULT_MIME_TYPE } = {}) {\r\n  const [, fileNameFromPath, extensionWithQueryParams] = PARSE_PATH_FOR_FILENAME_REGEX.exec(url)\r\n\r\n  const extension = extensionWithQueryParams.split('?')[0]\r\n\r\n  fileName = fileName || fileNameFromPath\r\n  fileName = setFileExtension(fileName, extension)\r\n\r\n  const ajax = new XMLHttpRequest()\r\n\r\n  ajax.open('GET', url, true)\r\n  ajax.responseType = 'blob'\r\n  ajax.onload = function(e) {\r\n    const { response } = e.target\r\n\r\n    return download(response, { fileName, mimeType })\r\n  }\r\n\r\n  return ajax.send()\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} base64Path\r\n * @param {String} [fileName]\r\n *\r\n * @return {*}\r\n */\r\nfunction convertBase64ToBlob(base64Path, { fileName = DEFAULT_FILE_NAME } = {}) {\r\n  const blob = dataURLToBlob(base64Path)\r\n  const mimeType = blob.type || DEFAULT_MIME_TYPE\r\n\r\n  return saveAsBlob(blob, { fileName, mimeType })\r\n}\r\n\r\n/**\r\n *\r\n * @param {Blob|String} blob\r\n * @param {String} [fileName]\r\n * @param {String} [mimeType]\r\n */\r\nfunction saveAsBlob(blob, { fileName = DEFAULT_FILE_NAME, mimeType = DEFAULT_MIME_TYPE } = {}) {\r\n  blob = blob instanceof Blob ? blob : new Blob([blob], { type: mimeType })\r\n\r\n  // IE10+ : (has Blob, but not a[download] or URL)\r\n  if (navigator.msSaveBlob) {\r\n    return navigator.msSaveBlob(blob, fileName)\r\n  }\r\n\r\n  // If browser has Blob and URL.\r\n  if (URL) {\r\n    return _save(URL.createObjectURL(blob), { fileName, windowMode: true })\r\n  }\r\n\r\n  // Rest old browsers should try to use reader.\r\n  return _saveWithReader(blob, { fileName })\r\n}\r\n\r\n/**\r\n *\r\n * @param {Blob} blob\r\n * @param {String} [fileName]\r\n */\r\nfunction _saveWithReader(blob, { fileName = DEFAULT_FILE_NAME } = {}) {\r\n  const reader = new FileReader()\r\n  reader.onload = function(e) {\r\n    _save(e.target.result, { fileName })\r\n  }\r\n\r\n  return reader.readAsDataURL(blob)\r\n}\r\n\r\n/**\r\n * @private\r\n *\r\n * @param {String} url\r\n * @param {String} fileName\r\n * @param {Boolean} windowMode\r\n *\r\n */\r\nfunction _save(url, { fileName = DEFAULT_FILE_NAME, windowMode = false } = {}) {\r\n  const anchor = document.createElement('a')\r\n\r\n  anchor.href = url\r\n  anchor.setAttribute('download', fileName)\r\n  anchor.className = 'download_url'\r\n  anchor.style.display = 'none'\r\n  anchor.addEventListener('click', stopPropagationHandler) //fix for IE\r\n  document.body.appendChild(anchor)\r\n\r\n  return Promise.resolve()\r\n    .then(() => anchor.click())\r\n    .then(() => {\r\n      anchor.removeEventListener('click', stopPropagationHandler)\r\n      document.body.removeChild(anchor)\r\n    })\r\n    .then(() => windowMode && URL && URL.revokeObjectURL(anchor.href))\r\n    .catch(printError)\r\n}\r\n\r\nexport default dwnld\r\n"],"names":["DEFAULT_MIME_TYPE","DEFAULT_FILE_NAME","BASE64_REGEX","EXTENSION_REGEX","PARSE_PATH_FOR_FILENAME_REGEX","isURL","str","pattern","RegExp","test","printError","e","console","error","message","stack","warn","Error","toString","dataURLToBlob","dataURL","parts","split","type","decoder","atob","decodeURIComponent","binaryData","pop","length","uint8Arr","Uint8Array","i","charCodeAt","Blob","setFileExtension","fileName","extension","exec","stopPropagationHandler","stopPropagation","dwnld","data","mimeType","downloadFromURL","convertBase64ToBlob","saveAsBlob","url","fileNameFromPath","extensionWithQueryParams","ajax","XMLHttpRequest","open","responseType","onload","response","target","download","send","base64Path","blob","navigator","msSaveBlob","URL","_save","createObjectURL","windowMode","_saveWithReader","reader","FileReader","result","readAsDataURL","anchor","document","createElement","href","setAttribute","className","style","display","addEventListener","body","appendChild","Promise","resolve","then","click","removeEventListener","removeChild","revokeObjectURL","catch"],"mappings":"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"}