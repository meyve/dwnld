{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants.js","webpack:///./src/utils.js","webpack:///./src/dwnld.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DEFAULT_MIME_TYPE","DEFAULT_FILE_NAME","BASE64_REGEX","EXTENSION_REGEX","PARSE_PATH_FOR_FILENAME_REGEX","printError","e","console","error","message","stack","warn","Error","toString","stopPropagationHandler","stopPropagation","download","data","_ref","arguments","length","undefined","_ref$fileName","fileName","_ref$mimeType","mimeType","str","RegExp","test","isURL","url","_ref2","_ref2$mimeType","_PARSE_PATH_FOR_FILEN2","_slicedToArray","exec","fileNameFromPath","extension","split","concat","setFileExtension","ajax","XMLHttpRequest","open","responseType","onload","target","response","send","downloadFromURL","base64Path","_ref3$fileName","blob","dataURL","parts","type","binaryData","atob","decodeURIComponent","pop","uint8Arr","Uint8Array","charCodeAt","Blob","dataURLToBlob","saveAsBlob","convertBase64ToBlob","_ref4","_ref4$fileName","_ref4$mimeType","navigator","msSaveBlob","URL","_save","createObjectURL","windowMode","_ref5$fileName","reader","FileReader","result","readAsDataURL","_saveWithReader","_ref6","_ref6$fileName","_ref6$windowMode","anchor","document","createElement","href","setAttribute","className","style","display","addEventListener","body","appendChild","Promise","resolve","then","click","removeEventListener","removeChild","revokeObjectURL","catch"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,IAIAlC,IAAAmC,EAAA,yCClFA,IAAMC,EAAoB,2BACpBC,EAAoB,OACpBC,EAAe,iCACfC,EAAkB,kBAClBC,EAAgC,oBCuBtC,SAASC,EAAWC,GAalB,MAZAC,QAAQC,MACN,0CACA,KACAF,EAAEG,QACF,KACAH,EAAEI,MACF,MAGFH,QAAQI,KAAK,4DACbJ,QAAQI,KAAK,sBAEP,IAAIC,MAAMN,EAAEO,8ZChCpB,SAASC,EAAuBR,GAC9BA,EAAES,kBAUJ,SAASC,EACPC,GAEA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAAG,EAAAJ,EADEK,gBACF,IAAAD,EADarB,EACbqB,EAAAE,EAAAN,EADgCO,gBAChC,IAAAD,EAD2CxB,EAC3CwB,EACA,IAGE,ODjBJ,SAAeE,GAWb,OAVgB,IAAIC,OAClB,yKAMA,KAGaC,KAAKF,GCMdG,CAAMZ,GAqBd,SAAyBa,GAAsD,IAAAC,EAAAZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAA/CI,EAA+CQ,EAA/CR,SAA+CS,EAAAD,EAArCN,gBAAqC,IAAAO,EAA1BhC,EAA0BgC,EAAAC,EAAAC,EAKzE9B,EAA8B+B,KAAKL,GALsC,GAG3EM,EAH2EH,EAAA,GAOvEI,EAPuEJ,EAAA,GAOlCK,MAAM,KAAK,GAGtDf,EDcF,SAA0BA,EAAUc,GAElC,OAAIlC,EAAgBgC,KAAKZ,GAAU,GAC1BA,EAGT,GAAAgB,OAAUhB,EAAV,KAAAgB,OAAsBF,GCpBXG,CADXjB,EAAWA,GAAYa,EACeC,GAEtC,IAAMI,EAAO,IAAIC,eAUjB,OARAD,EAAKE,KAAK,MAAOb,GAAK,GACtBW,EAAKG,aAAe,OACpBH,EAAKI,OAAS,SAASvC,GAGrB,OAAOU,EAFcV,EAAEwC,OAAfC,UAEoBxB,WAAUE,cAGjCgB,EAAKO,OA1CDC,CAAgBhC,GAAQM,WAAUE,aAIvCvB,EAAa0B,KAAKX,GAgD1B,SACEiC,GAEA,IAAAC,GAAAhC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,OADEI,gBACF,IAAA4B,EADalD,EACbkD,EACMC,EDlCR,SAAuBC,GAQrB,IAPA,IAAMC,EAAQD,EAAQf,MAAM,SACtBiB,EAAOD,EAAM,GAEbE,GADuB,WAAbF,EAAM,GAAkBG,KAAOC,oBACpBJ,EAAMK,OAC3BvC,EAASoC,EAAWpC,OACpBwC,EAAW,IAAIC,WAAWzC,GAEvBpD,EAAI,EAAGA,EAAIoD,IAAUpD,EAC5B4F,EAAS5F,GAAKwF,EAAWM,WAAW9F,GAGtC,OAAO,IAAI+F,MAAMH,IAAaL,KAAMA,ICsBvBS,CAAcd,GACrBzB,EAAW2B,EAAKG,MAAQvD,EAE9B,OAAOiE,EAAWb,GAAQ7B,WAAUE,aAtDzByC,CAAoBjD,GAAQM,aAG9B0C,EAAWhD,GAAQM,WAAUE,aACpC,MAAOnB,GACPD,EAAWC,IA0Df,SAAS2D,EACPb,GAEA,IAAAe,EAAAhD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAAiD,EAAAD,EADE5C,gBACF,IAAA6C,EADanE,EACbmE,EAAAC,EAAAF,EADgC1C,SAKhC,OAHA2B,EAAOA,aAAgBW,KAAOX,EAAO,IAAIW,MAAMX,IAASG,UADxD,IAAAc,EAD2CrE,EAC3CqE,IAIIC,UAAUC,WACLD,UAAUC,WAAWnB,EAAM7B,GAIhCiD,IACKC,EAAMD,IAAIE,gBAAgBtB,IAAS7B,WAAUoD,YAAY,IAYpE,SAAyBvB,GAA6C,IAAAwB,GAAAzD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,OAArCI,gBAAqC,IAAAqD,EAA1B3E,EAA0B2E,EAC9DC,EAAS,IAAIC,WAKnB,OAJAD,EAAOhC,OAAS,SAASvC,GACvBmE,EAAMnE,EAAEwC,OAAOiC,QAAUxD,cAGpBsD,EAAOG,cAAc5B,GAdrB6B,CAAgB7B,GAAQ7B,aAyBjC,SAASkD,EAAM3C,GAAgE,IAAAoD,EAAA/D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAAgE,EAAAD,EAAzD3D,gBAAyD,IAAA4D,EAA9ClF,EAA8CkF,EAAAC,EAAAF,EAA3BP,kBAA2B,IAAAS,KACvEC,EAASC,SAASC,cAAc,KAStC,OAPAF,EAAOG,KAAO1D,EACduD,EAAOI,aAAa,WAAYlE,GAChC8D,EAAOK,UAAY,eACnBL,EAAOM,MAAMC,QAAU,OACvBP,EAAOQ,iBAAiB,QAAS/E,GACjCwE,SAASQ,KAAKC,YAAYV,GAEnBW,QAAQC,UACZC,KAAK,kBAAMb,EAAOc,UAClBD,KAAK,WACJb,EAAOe,oBAAoB,QAAStF,GACpCwE,SAASQ,KAAKO,YAAYhB,KAE3Ba,KAAK,kBAAMvB,GAAcH,KAAOA,IAAI8B,gBAAgBjB,EAAOG,QAC3De,MAAMlG,GAGIW,QC3JAA","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const DEFAULT_MIME_TYPE = 'application/octet-stream'\r\nconst DEFAULT_FILE_NAME = 'file'\r\nconst BASE64_REGEX = /^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/\r\nconst EXTENSION_REGEX = /(?:\\.([^.]+))?$/\r\nconst PARSE_PATH_FOR_FILENAME_REGEX = /^.*\\/(.*)\\.(.*)$/g\r\n\r\nexport {\r\n  DEFAULT_FILE_NAME,\r\n  DEFAULT_MIME_TYPE,\r\n  BASE64_REGEX,\r\n  EXTENSION_REGEX,\r\n  PARSE_PATH_FOR_FILENAME_REGEX\r\n}\r\n","import { EXTENSION_REGEX } from './constants'\r\n\r\n/**\r\n * https://stackoverflow.com/a/14582229/7446674\r\n *\r\n * @param {String} str\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction isURL(str) {\r\n  const pattern = new RegExp(\r\n    '^(https?:\\\\/\\\\/)?' + // protocol\r\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|' + // domain name\r\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n      '(\\\\#[-a-z\\\\d_]*)?$',\r\n    'i'\r\n  ) // fragment locator\r\n\r\n  return pattern.test(str)\r\n}\r\n\r\n/**\r\n *\r\n * @param {Error} e\r\n */\r\nfunction printError(e) {\r\n  console.error(\r\n    'Something went wrong while downloading:',\r\n    '\\n',\r\n    e.message,\r\n    '\\n',\r\n    e.stack,\r\n    '\\n'\r\n  )\r\n\r\n  console.warn('Please, report issues to: https://github.com/meyve/dwnld')\r\n  console.warn('Have a nice day :)')\r\n\r\n  throw new Error(e.toString())\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} dataURL\r\n *\r\n * @return {Blob}\r\n */\r\nfunction dataURLToBlob(dataURL) {\r\n  const parts = dataURL.split(/[:;,]/)\r\n  const type = parts[1]\r\n  const decoder = parts[2] === 'base64' ? atob : decodeURIComponent\r\n  const binaryData = decoder(parts.pop())\r\n  const length = binaryData.length\r\n  const uint8Arr = new Uint8Array(length)\r\n\r\n  for (let i = 0; i < length; ++i) {\r\n    uint8Arr[i] = binaryData.charCodeAt(i)\r\n  }\r\n\r\n  return new Blob([uint8Arr], { type: type })\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} fileName\r\n * @param {String} extension\r\n *\r\n * @return {String}\r\n */\r\nfunction setFileExtension(fileName, extension) {\r\n  // If filename has extension in it\r\n  if (EXTENSION_REGEX.exec(fileName)[0]) {\r\n    return fileName\r\n  }\r\n\r\n  return `${fileName}.${extension}`\r\n}\r\n\r\nexport { isURL, printError, dataURLToBlob, setFileExtension }\r\n","import {\r\n  DEFAULT_MIME_TYPE,\r\n  DEFAULT_FILE_NAME,\r\n  BASE64_REGEX,\r\n  PARSE_PATH_FOR_FILENAME_REGEX\r\n} from './constants'\r\nimport { printError, isURL, dataURLToBlob, setFileExtension } from './utils'\r\n\r\nfunction stopPropagationHandler(e) {\r\n  e.stopPropagation()\r\n}\r\n\r\n/**\r\n *\r\n * @param {String|Blob} data\r\n * @param {String} [fileName]\r\n * @param {String} [mimeType]\r\n *\r\n */\r\nfunction download(\r\n  data,\r\n  { fileName = DEFAULT_FILE_NAME, mimeType = DEFAULT_MIME_TYPE } = {}\r\n) {\r\n  try {\r\n    // If URL was passed - first download it.\r\n    // Then recursively call download again with response.\r\n    if (isURL(data)) {\r\n      return downloadFromURL(data, { fileName, mimeType })\r\n    }\r\n\r\n    // If raw base64:dataURL was passed.\r\n    if (BASE64_REGEX.test(data)) {\r\n      return convertBase64ToBlob(data, { fileName })\r\n    }\r\n\r\n    return saveAsBlob(data, { fileName, mimeType })\r\n  } catch (e) {\r\n    printError(e)\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} url\r\n * @param {String} [fileName]\r\n * @param {String} [mimeType]\r\n */\r\nfunction downloadFromURL(url, { fileName, mimeType = DEFAULT_MIME_TYPE } = {}) {\r\n  const [\r\n    ,\r\n    fileNameFromPath,\r\n    extensionWithQueryParams\r\n  ] = PARSE_PATH_FOR_FILENAME_REGEX.exec(url)\r\n\r\n  const extension = extensionWithQueryParams.split('?')[0]\r\n\r\n  fileName = fileName || fileNameFromPath\r\n  fileName = setFileExtension(fileName, extension)\r\n\r\n  const ajax = new XMLHttpRequest()\r\n\r\n  ajax.open('GET', url, true)\r\n  ajax.responseType = 'blob'\r\n  ajax.onload = function(e) {\r\n    const { response } = e.target\r\n\r\n    return download(response, { fileName, mimeType })\r\n  }\r\n\r\n  return ajax.send()\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} base64Path\r\n * @param {String} [fileName]\r\n *\r\n * @return {*}\r\n */\r\nfunction convertBase64ToBlob(\r\n  base64Path,\r\n  { fileName = DEFAULT_FILE_NAME } = {}\r\n) {\r\n  const blob = dataURLToBlob(base64Path)\r\n  const mimeType = blob.type || DEFAULT_MIME_TYPE\r\n\r\n  return saveAsBlob(blob, { fileName, mimeType })\r\n}\r\n\r\n/**\r\n *\r\n * @param {Blob|String} blob\r\n * @param {String} [fileName]\r\n * @param {String} [mimeType]\r\n */\r\nfunction saveAsBlob(\r\n  blob,\r\n  { fileName = DEFAULT_FILE_NAME, mimeType = DEFAULT_MIME_TYPE } = {}\r\n) {\r\n  blob = blob instanceof Blob ? blob : new Blob([blob], { type: mimeType })\r\n\r\n  // IE10+ : (has Blob, but not a[download] or URL)\r\n  if (navigator.msSaveBlob) {\r\n    return navigator.msSaveBlob(blob, fileName)\r\n  }\r\n\r\n  // If browser has Blob and URL.\r\n  if (URL) {\r\n    return _save(URL.createObjectURL(blob), { fileName, windowMode: true })\r\n  }\r\n\r\n  // Rest old browsers should try to use reader.\r\n  return _saveWithReader(blob, { fileName })\r\n}\r\n\r\n/**\r\n *\r\n * @param {Blob} blob\r\n * @param {String} [fileName]\r\n */\r\nfunction _saveWithReader(blob, { fileName = DEFAULT_FILE_NAME } = {}) {\r\n  const reader = new FileReader()\r\n  reader.onload = function(e) {\r\n    _save(e.target.result, { fileName })\r\n  }\r\n\r\n  return reader.readAsDataURL(blob)\r\n}\r\n\r\n/**\r\n * @private\r\n *\r\n * @param {String} url\r\n * @param {String} fileName\r\n * @param {Boolean} windowMode\r\n *\r\n */\r\nfunction _save(url, { fileName = DEFAULT_FILE_NAME, windowMode = false } = {}) {\r\n  const anchor = document.createElement('a')\r\n\r\n  anchor.href = url\r\n  anchor.setAttribute('download', fileName)\r\n  anchor.className = 'download_url'\r\n  anchor.style.display = 'none'\r\n  anchor.addEventListener('click', stopPropagationHandler) //fix for IE\r\n  document.body.appendChild(anchor)\r\n\r\n  return Promise.resolve()\r\n    .then(() => anchor.click())\r\n    .then(() => {\r\n      anchor.removeEventListener('click', stopPropagationHandler)\r\n      document.body.removeChild(anchor)\r\n    })\r\n    .then(() => windowMode && URL && URL.revokeObjectURL(anchor.href))\r\n    .catch(printError)\r\n}\r\n\r\nexport default download\r\n","import download from './dwnld'\r\n\r\nexport default download\r\n"],"sourceRoot":""}